<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.max.b2c.mapper.ProductSpecsMapper">
  <resultMap id="BaseResultMap" type="com.max.b2c.model.ProductSpecs">
    <id column="specs_id" jdbcType="INTEGER" property="specs_id" />
    <result column="specs_name" jdbcType="VARCHAR" property="specs_name" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmt_create" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmt_modified" />
    <result column="is_searched" jdbcType="INTEGER" property="is_searched" />
    <result column="is_saled" jdbcType="INTEGER" property="is_saled" />
    <result column="category_id" jdbcType="INTEGER" property="category_id" />
    <result column="sortid" jdbcType="INTEGER" property="sortid" />
    <result column="is_sku" jdbcType="INTEGER" property="is_sku" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    specs_id, specs_name, gmt_create, gmt_modified, is_searched, is_saled, category_id, 
    sortid, is_sku
  </sql>
  <select id="selectByExample" parameterType="com.max.b2c.model.ProductSpecsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from product_specs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product_specs
    where specs_id = #{specs_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product_specs
    where specs_id = #{specs_id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.max.b2c.model.ProductSpecsExample">
    delete from product_specs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.max.b2c.model.ProductSpecs">
    insert into product_specs (specs_id, specs_name, gmt_create, 
      gmt_modified, is_searched, is_saled, 
      category_id, sortid, is_sku
      )
    values (#{specs_id,jdbcType=INTEGER}, #{specs_name,jdbcType=VARCHAR}, #{gmt_create,jdbcType=TIMESTAMP}, 
      #{gmt_modified,jdbcType=TIMESTAMP}, #{is_searched,jdbcType=INTEGER}, #{is_saled,jdbcType=INTEGER}, 
      #{category_id,jdbcType=INTEGER}, #{sortid,jdbcType=INTEGER}, #{is_sku,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.max.b2c.model.ProductSpecs">
    insert into product_specs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="specs_id != null">
        specs_id,
      </if>
      <if test="specs_name != null">
        specs_name,
      </if>
      <if test="gmt_create != null">
        gmt_create,
      </if>
      <if test="gmt_modified != null">
        gmt_modified,
      </if>
      <if test="is_searched != null">
        is_searched,
      </if>
      <if test="is_saled != null">
        is_saled,
      </if>
      <if test="category_id != null">
        category_id,
      </if>
      <if test="sortid != null">
        sortid,
      </if>
      <if test="is_sku != null">
        is_sku,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="specs_id != null">
        #{specs_id,jdbcType=INTEGER},
      </if>
      <if test="specs_name != null">
        #{specs_name,jdbcType=VARCHAR},
      </if>
      <if test="gmt_create != null">
        #{gmt_create,jdbcType=TIMESTAMP},
      </if>
      <if test="gmt_modified != null">
        #{gmt_modified,jdbcType=TIMESTAMP},
      </if>
      <if test="is_searched != null">
        #{is_searched,jdbcType=INTEGER},
      </if>
      <if test="is_saled != null">
        #{is_saled,jdbcType=INTEGER},
      </if>
      <if test="category_id != null">
        #{category_id,jdbcType=INTEGER},
      </if>
      <if test="sortid != null">
        #{sortid,jdbcType=INTEGER},
      </if>
      <if test="is_sku != null">
        #{is_sku,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.max.b2c.model.ProductSpecsExample" resultType="java.lang.Integer">
    select count(*) from product_specs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_specs
    <set>
      <if test="record.specs_id != null">
        specs_id = #{record.specs_id,jdbcType=INTEGER},
      </if>
      <if test="record.specs_name != null">
        specs_name = #{record.specs_name,jdbcType=VARCHAR},
      </if>
      <if test="record.gmt_create != null">
        gmt_create = #{record.gmt_create,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmt_modified != null">
        gmt_modified = #{record.gmt_modified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.is_searched != null">
        is_searched = #{record.is_searched,jdbcType=INTEGER},
      </if>
      <if test="record.is_saled != null">
        is_saled = #{record.is_saled,jdbcType=INTEGER},
      </if>
      <if test="record.category_id != null">
        category_id = #{record.category_id,jdbcType=INTEGER},
      </if>
      <if test="record.sortid != null">
        sortid = #{record.sortid,jdbcType=INTEGER},
      </if>
      <if test="record.is_sku != null">
        is_sku = #{record.is_sku,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_specs
    set specs_id = #{record.specs_id,jdbcType=INTEGER},
      specs_name = #{record.specs_name,jdbcType=VARCHAR},
      gmt_create = #{record.gmt_create,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmt_modified,jdbcType=TIMESTAMP},
      is_searched = #{record.is_searched,jdbcType=INTEGER},
      is_saled = #{record.is_saled,jdbcType=INTEGER},
      category_id = #{record.category_id,jdbcType=INTEGER},
      sortid = #{record.sortid,jdbcType=INTEGER},
      is_sku = #{record.is_sku,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.max.b2c.model.ProductSpecs">
    update product_specs
    <set>
      <if test="specs_name != null">
        specs_name = #{specs_name,jdbcType=VARCHAR},
      </if>
      <if test="gmt_create != null">
        gmt_create = #{gmt_create,jdbcType=TIMESTAMP},
      </if>
      <if test="gmt_modified != null">
        gmt_modified = #{gmt_modified,jdbcType=TIMESTAMP},
      </if>
      <if test="is_searched != null">
        is_searched = #{is_searched,jdbcType=INTEGER},
      </if>
      <if test="is_saled != null">
        is_saled = #{is_saled,jdbcType=INTEGER},
      </if>
      <if test="category_id != null">
        category_id = #{category_id,jdbcType=INTEGER},
      </if>
      <if test="sortid != null">
        sortid = #{sortid,jdbcType=INTEGER},
      </if>
      <if test="is_sku != null">
        is_sku = #{is_sku,jdbcType=INTEGER},
      </if>
    </set>
    where specs_id = #{specs_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.max.b2c.model.ProductSpecs">
    update product_specs
    set specs_name = #{specs_name,jdbcType=VARCHAR},
      gmt_create = #{gmt_create,jdbcType=TIMESTAMP},
      gmt_modified = #{gmt_modified,jdbcType=TIMESTAMP},
      is_searched = #{is_searched,jdbcType=INTEGER},
      is_saled = #{is_saled,jdbcType=INTEGER},
      category_id = #{category_id,jdbcType=INTEGER},
      sortid = #{sortid,jdbcType=INTEGER},
      is_sku = #{is_sku,jdbcType=INTEGER}
    where specs_id = #{specs_id,jdbcType=INTEGER}
  </update>
</mapper>